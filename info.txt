TO DO
[]pipes with redirection (basic and multiple pipes work)
	[] echo hello > out | wc -w
[]norm


OPTIONAL(?)
[]history: with one value as argument to change ammount of lines from history to print
[]history: -c to clear the history
[]bonus only?
	echo "'$USER'" should print 'USER_VALUE'
	echo '"$USER"' should print "$USER"

IN PROGRESS
[smatschu]
[]for $?, at every possible exit, update exit value in mini struct
[]arg expansion needs to recognize '$ within words when lowercase, uppercase no
[]norm arg_expansion

[ehedeman]
[]Parsing:
	[] leave "" as well when $BLABLA, because
		- $USERblabal should not print anything, but...
		- "$USER"blabla should expand user, but I can't expand USER if i dont have the "" anymore.
		- or would expand during parsing be possible?
	[] echo "hello" '|' cat -e should print hello | cat -e -> operstors with siongle quotes in general
	[x]echo '$USER'$? is saving '$USER'$? as a whole arg. Fix parsing or should rewrite echo again?
[]input redirection without executing the command immideadly -> redirect input then run the command loop, reset input at end
	[] wc -l > info.txt < hello ;  should redirect the output of wc -l > info.txt to hello (operators might be the other way around)
	[] << end ; input redirecion until but without command (leaks)

IDEA:
	pipes and redirections established at the beginning: a file descriptor array which gets sorted through 1 by 1 (maybe pipes and redirections seperately)

DONE
[x]tab is running ls: if you press Tab twice without typing anything or 
just after typing a part of a filename or directory name, 
readline will list all files and directories in the current directory.
[x]p is running pwd, c cd, e echo and so on.
[x]echo $PATH${NAME}$WTVR
[x]expr $? + $?
[x] export FOO=test, than export FOO, should not update FOO.
[x]SHLVL
[x]history command (capacity is set to 5 for easy visualization, can change to 2000 later like bash)
[x] export FOO=test, than export FOO, should not update FOO.
[x]ctrl-C in a prompt after you wrote some stuff should show a new line with a new prompt
	and command + CTRL+c + ENTER should not execute command (handler?)
[x]if you run ctrl+c and no enter, ctrl+d doesnt work
[x]cat < file leaks ------------ no it doesnt -----------
[x]from some eval sheet: "ctrl-\ in a prompt after you wrote some stuff should quit minishell?" Seems to be working like in bash, so wtvr.
[x] norm arg_expansion
[x]on bash: export HISTCONTROL=ignoredups , so history in bash ignores consecutive dup cmds
[x] what is this exactly?
	mode = S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH;
-> mode is the right that the file gets when created (RUSR = Read User etc.)
[x] whats this flag -fno-omit-frame-pointer for?
->debug flag for fsanatize, used last in so_long. think u can get more info on the leaks etc with that flag
but not sure
[x]exit function can take one value as argument
	run bash
	exit 123
	echo $? will return 123
	on minishell, exit 123
	on bash, echo $? should display 123
[x] input check for pipe without content
[x]basic and multiple pipes
[x]echo $?"$?"$? is working, but echo $? "$?" $? not, also asd "asd" asd not
