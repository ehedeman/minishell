TO DO
[]pipes with redirection (basic and multiple pipes work)
[]norm

OPTIONAL(?)
[]history: with one value as argument to change ammount of lines from history to print
[]history: -c to clear the history
[]bonus only?
	echo "'$USER'" should print 'USER_VALUE'
	echo '"$USER"' should print "$USER"

IN PROGRESS
[smatschu]for $?, at every possible exit, update exit value in mini struct
[smatschu]echo '$ and whatever withOUT arg_expansion first
	[] $PATH and "$PATH" should expand
	[] '$PATH' should not expand
	[] echo $ is not printing $

[ehedeman]none

PLEASE TEST (set as DONE if you think is ok or put back as TO DO)
[ehedeman]
[]basic and multiple pipes

[smatchu]
[]input check for pipe without content

QUESTIONS
[x] what is this exactly?
	mode = S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH;
-> mode is the right that the file gets when created (RUSR = Read User etc.)
[x] whats this flag -fno-omit-frame-pointer for?
->debug flag for fsanatize, used last in so_long. think u can get more info on the leaks etc with that flag
but not sure

DONE
[x]tab is running ls: if you press Tab twice without typing anything or 
just after typing a part of a filename or directory name, 
readline will list all files and directories in the current directory.
[x]p is running pwd, c cd, e echo and so on.
[x]echo $PATH${NAME}$WTVR
[x]expr $? + $?
[x] export FOO=test, than export FOO, should not update FOO.
[x]SHLVL
[x]history command (capacity is set to 5 for easy visualization, can change to 2000 later like bash)
[x] export FOO=test, than export FOO, should not update FOO.
[x]ctrl-C in a prompt after you wrote some stuff should show a new line with a new prompt
	and command + CTRL+c + ENTER should not execute command (handler?)
[x]if you run ctrl+c and no enter, ctrl+d doesnt work
[x]cat < file leaks ------------ no it doesnt -----------
[x]from some eval sheet: "ctrl-\ in a prompt after you wrote some stuff should quit minishell?" Seems to be working like in bash, so wtvr.
[x] norm arg_expansion
[x]on bash: export HISTCONTROL=ignoredups , so history in bash ignores consecutive dup cmds
[x]blabla"blabla" heap-buffer-overflow instead of command not found
[x]echo "cat lol.c | cat > lol.c" should print cat lol.c | cat > lol.c
[x]'' not giving command not found
[x] echo "|${USER}|" should output |username|
[x] new parsing